plugins {
    id 'java-library'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.5.3"
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.63.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

tasks.named('processResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


group = 'org.mybatis.jpetstore.common'
version = '1.0.0'
archivesBaseName = 'jpetstore-common'

dependencies {
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    api 'org.apache.tomcat.embed:tomcat-embed-jasper'
    api 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    api 'org.glassfish.web:jakarta.servlet.jsp.jstl'
    api "org.hsqldb:hsqldb:2.7.3"
    api 'org.springframework.session:spring-session-data-redis'
    api 'org.springframework.boot:spring-boot-starter-data-redis'
    api 'javax.annotation:javax.annotation-api:1.3.2'
    api 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.3.0'

//    api 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
    api 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}