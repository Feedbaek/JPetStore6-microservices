server:
  port: 8084
  address: 0.0.0.0
  servlet:
    context-path: /order

spring:
  application:
    name: order-service
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
  sql:
    init:
      schema-locations: classpath:database/jpetstore-hsqldb-schema.sql
      data-locations: classpath:database/jpetstore-hsqldb-dataload.sql
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: 6379
      repositories:
        enabled: false
  session:
    redis:
      namespace: JPetStore6
      repository-type: indexed

mybatis:
  type-aliases-package: org.mybatis.jpetstore.*.domain
  mapper-locations: classpath:mapperXML/*.xml

gateway:
  base-url: ${GATEWAY_BASE_URL:http://localhost}

kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

grpc:
  client:
    catalog:
      address: ${CATALOG_GRPC_ADDRESS:static://localhost:9093} # gRPC 서버 주소
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext # 암호화 되지 않는 설정. 운영 환경에서는 TLS를 사용하여 보안 통신을 설정해야 함

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}